/// <reference types="node" />
export interface IldcpRequest {
}
export interface IldcpResponse {
    clientAddress: string;
    assetScale: number;
    assetCode: string;
}
declare const deserializeIldcpRequest: (request: Buffer) => IldcpRequest;
declare const serializeIldcpRequest: (request: IldcpRequest) => Buffer;
declare const deserializeIldcpResponse: (response: Buffer) => IldcpResponse;
declare const serializeIldcpResponse: (response: IldcpResponse) => Buffer;
declare const fetch: (sendData: (data: Buffer) => Promise<Buffer>) => Promise<IldcpResponse>;
export interface ServeSettings {
    requestPacket: Buffer;
    handler: (request: IldcpRequest) => IldcpResponse;
    serverAddress: string;
}
declare const serve: ({requestPacket, handler, serverAddress}: ServeSettings) => Promise<Buffer>;
export { deserializeIldcpRequest, serializeIldcpRequest, deserializeIldcpResponse, serializeIldcpResponse, fetch, serve };
