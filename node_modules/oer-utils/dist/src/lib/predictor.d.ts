/// <reference types="node" />
import BigNumber from 'bignumber.js';
declare class Predictor {
    size: number;
    components: Buffer[];
    constructor();
    writeUInt(value: BigNumber.Value, length: number): void;
    writeInt(value: BigNumber.Value, length: number): void;
    writeVarUInt(_value: BigNumber.Value): void;
    writeVarInt(_value: BigNumber.Value): void;
    writeOctetString(buffer: Buffer, length: number): void;
    writeVarOctetString(buffer: Buffer): void;
    write(bytes: Buffer): void;
    skip(bytes: number): void;
    getSize(): number;
    getBuffer(): Buffer;
    private skipVarOctetString;
}
interface Predictor {
    writeUInt8(value: number): undefined;
    writeUInt16(value: number): undefined;
    writeUInt32(value: number): undefined;
    writeUInt64(value: number): undefined;
    writeInt8(value: number): undefined;
    writeInt16(value: number): undefined;
    writeInt32(value: number): undefined;
    writeInt64(value: number): undefined;
}
export default Predictor;
