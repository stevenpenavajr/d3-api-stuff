/// <reference types="node" />
import BigNumber from 'bignumber.js';
declare class Writer {
    static MAX_SAFE_INTEGER: number;
    static MIN_SAFE_INTEGER: number;
    static UINT_RANGES: {
        1: number;
        2: number;
        3: number;
        4: number;
        5: number;
        6: number;
        8: BigNumber;
    };
    static INT_RANGES: {
        1: number[];
        2: number[];
        3: number[];
        4: number[];
        5: number[];
        6: number[];
        8: BigNumber[];
    };
    components: Buffer[];
    constructor();
    writeUInt(_value: BigNumber.Value | number[], length: number): void;
    writeInt(_value: BigNumber.Value, length: number): void;
    writeVarUInt(_value: BigNumber.Value | Buffer): void;
    writeVarInt(_value: BigNumber.Value | Buffer): void;
    writeOctetString(buffer: Buffer, length: number): void;
    writeVarOctetString(buffer: Buffer): void;
    write(buffer: Buffer): void;
    getBuffer(): Buffer;
}
interface Writer {
    writeUInt8(value: BigNumber.Value): undefined;
    writeUInt16(value: BigNumber.Value): undefined;
    writeUInt32(value: BigNumber.Value): undefined;
    writeUInt64(value: BigNumber.Value | number[]): undefined;
    writeInt8(value: BigNumber.Value): undefined;
    writeInt16(value: BigNumber.Value): undefined;
    writeInt32(value: BigNumber.Value): undefined;
    writeInt64(value: BigNumber.Value): undefined;
}
export default Writer;
