{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../src/errors.ts"],"names":[],"mappings":"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","sourcesContent":["import { Writer } from 'oer-utils'\nimport { stringToTwoNumbers, twoNumbersToString } from './utils/uint64'\nimport BaseError = require('extensible-error')\n\nexport const codes = {\n  F00_BAD_REQUEST: 'F00',\n  F01_INVALID_PACKET: 'F01',\n  F02_UNREACHABLE: 'F02',\n  F03_INVALID_AMOUNT: 'F03',\n  F04_INSUFFICIENT_DESTINATION_AMOUNT: 'F04',\n  F05_WRONG_CONDITION: 'F05',\n  F06_UNEXPECTED_PAYMENT: 'F06',\n  F07_CANNOT_RECEIVE: 'F07',\n  F08_AMOUNT_TOO_LARGE: 'F08',\n  F99_APPLICATION_ERROR: 'F99',\n  T00_INTERNAL_ERROR: 'T00',\n  T01_PEER_UNREACHABLE: 'T01',\n  T02_PEER_BUSY: 'T02',\n  T03_CONNECTOR_BUSY: 'T03',\n  T04_INSUFFICIENT_LIQUIDITY: 'T04',\n  T05_RATE_LIMITED: 'T05',\n  T99_APPLICATION_ERROR: 'T99',\n  R00_TRANSFER_TIMED_OUT: 'R00',\n  R01_INSUFFICIENT_SOURCE_AMOUNT: 'R01',\n  R02_INSUFFICIENT_TIMEOUT: 'R02',\n  R99_APPLICATION_ERROR: 'R99'\n}\n\nexport class BadRequestError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F00_BAD_REQUEST\n  }\n}\n\nexport class InvalidPacketError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F01_INVALID_PACKET\n  }\n}\n\nexport class UnreachableError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F02_UNREACHABLE\n  }\n}\n\nexport class InvalidAmountError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F03_INVALID_AMOUNT\n  }\n}\n\nexport class InsufficientDestinationAmountError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F04_INSUFFICIENT_DESTINATION_AMOUNT\n  }\n}\n\nexport class WrongConditionError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F05_WRONG_CONDITION\n  }\n}\n\nexport class UnexpectedPaymentError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F06_UNEXPECTED_PAYMENT\n  }\n}\n\nexport class CannotReceiveError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.F07_CANNOT_RECEIVE\n  }\n}\n\nexport interface AmountTooLargeErrorOpts {\n  receivedAmount: string,\n  maximumAmount: string\n}\n\nexport class AmountTooLargeError extends BaseError {\n  public ilpErrorCode: string\n  public ilpErrorData: Buffer\n  constructor (message: string, opts: AmountTooLargeErrorOpts) {\n    super(message)\n    this.ilpErrorCode = codes.F08_AMOUNT_TOO_LARGE\n\n    const writer = new Writer()\n    writer.writeUInt64(stringToTwoNumbers(opts.receivedAmount))\n    writer.writeUInt64(stringToTwoNumbers(opts.maximumAmount))\n\n    this.ilpErrorData = writer.getBuffer()\n  }\n}\n\nexport class FinalApplicationError extends BaseError {\n  public ilpErrorCode: string\n  public ilpErrorData: Buffer\n  constructor (message: string, data: Buffer) {\n    super(message)\n    this.ilpErrorCode = codes.F99_APPLICATION_ERROR\n    this.ilpErrorData = data\n  }\n}\n\nexport class InternalError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.T00_INTERNAL_ERROR\n  }\n}\n\nexport class PeerUnreachableError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.T01_PEER_UNREACHABLE\n  }\n}\n\nexport class PeerBusyError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.T02_PEER_BUSY\n  }\n}\n\nexport class ConnectorBusyError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.T03_CONNECTOR_BUSY\n  }\n}\n\nexport class InsufficientLiquidityError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.T04_INSUFFICIENT_LIQUIDITY\n  }\n}\n\nexport class RateLimitedError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.T05_RATE_LIMITED\n  }\n}\n\nexport class TemporaryApplicationError extends BaseError {\n  public ilpErrorCode: string\n  public ilpErrorData: Buffer\n  constructor (message: string, data: Buffer) {\n    super(message)\n    this.ilpErrorCode = codes.T99_APPLICATION_ERROR\n    this.ilpErrorData = data\n  }\n}\n\nexport class TransferTimedOutError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.R00_TRANSFER_TIMED_OUT\n  }\n}\n\nexport class InsufficientSourceAmountError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.R01_INSUFFICIENT_SOURCE_AMOUNT\n  }\n}\n\nexport class InsufficientTimeoutError extends BaseError {\n  public ilpErrorCode: string\n  constructor (message: string) {\n    super(message)\n    this.ilpErrorCode = codes.R02_INSUFFICIENT_TIMEOUT\n  }\n}\n\nexport class RelativeApplicationError extends BaseError {\n  public ilpErrorCode: string\n  public ilpErrorData: Buffer\n  constructor (message: string, data: Buffer) {\n    super(message)\n    this.ilpErrorCode = codes.R99_APPLICATION_ERROR\n    this.ilpErrorData = data\n  }\n}\n"]}